# Создать класс TrafficLight (светофор) и определить у него один атрибут color (цвет) и метод running (запуск).
# Атрибут реализовать как приватный.
# В рамках метода реализовать переключение светофора в режимы: красный, желтый, зеленый.

# Продолжительность
# первого состояния (красный) составляет 7 секунд,
# второго (желтый) — 2 секунды,
# третьего (зеленый) — на ваше усмотрение.

# Переключение между режимами должно осуществляться только в указанном порядке (красный, желтый, зеленый).

# Проверить работу примера, создав экземпляр и вызвав описанный метод.
# Задачу можно усложнить, реализовав проверку порядка режимов,
# и при его нарушении выводить соответствующее сообщение и завершать скрипт.

import time


class TrafficLight:
    __colors = ['красный', 'желтый', 'зеленый']
    __timer = {'красный': 7, 'желтый': 2, 'зеленый': 5}
    __modes = ['blinking', 'base']

    def running(self, mode='blinking'):
        idx = 1 if mode == 'blinking' else 0
        while True:
            print(self.__colors[idx])
            time.sleep(self.__timer.get(self.__colors[idx]))
            if mode == 'base':
                idx = idx + 1 if idx < 2 else 0


tl = TrafficLight()
# tl.running()
tl.running('base')

# Исхожу из того, что светофор выключается из розетки, а если включен, то работает в бесконечном цикле
# Также можно сделать атрибут __is_active: bool, метод __stop и третий режим работы в конечном цикле
